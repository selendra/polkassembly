- table:
    schema: public
    name: blockchain_socials
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - network
      - discord
      - reddit
      - github
      - twitter
      - youtube
      - telegram
      - homepage
      - block_explorer
      - id
      filter: {}
  - role: event_bot
    permission:
      columns:
      - block_explorer
      - discord
      - github
      - homepage
      - id
      - network
      - reddit
      - telegram
      - twitter
      - youtube
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - id
      - block_explorer
      - discord
      - github
      - homepage
      - network
      - reddit
      - telegram
      - twitter
      - youtube
      filter: {}
- table:
    schema: public
    name: calender_events
  insert_permissions:
  - role: event_bot
    permission:
      check: {}
      columns:
      - approval_status
      - content
      - end_time
      - event_id
      - event_type
      - location
      - module
      - network
      - start_time
      - status
      - title
      - url
      - user_id
      backend_only: false
  - role: user
    permission:
      check:
        _and:
        - user_id:
            _eq: X-Hasura-User-Id
      columns:
      - content
      - end_time
      - event_id
      - event_type
      - id
      - location
      - module
      - network
      - start_time
      - status
      - title
      - url
      - user_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - approval_status
      - content
      - end_time
      - event_id
      - event_type
      - id
      - location
      - module
      - network
      - start_time
      - status
      - title
      - url
      - user_id
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - approval_status
      - content
      - end_time
      - event_id
      - event_type
      - id
      - location
      - module
      - network
      - start_time
      - status
      - title
      - url
      - user_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - approval_status
      - content
      - end_time
      - event_id
      - event_type
      - id
      - location
      - module
      - network
      - start_time
      - status
      - title
      - url
      - user_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: event_bot
    permission:
      columns:
      - approval_status
      - content
      - end_time
      - event_id
      - event_type
      - location
      - module
      - network
      - start_time
      - status
      - title
      - url
      filter: {}
      check: {}
  - role: user
    permission:
      columns:
      - content
      - end_time
      - event_type
      - location
      - module
      - start_time
      - title
      - url
      filter:
        _and:
        - user_id:
            _eq: X-Hasura-User-Id
      check:
        _and:
        - user_id:
            _eq: X-Hasura-User-Id
  delete_permissions:
  - role: event_bot
    permission:
      filter: {}
- table:
    schema: public
    name: comment_reactions
  object_relationships:
  - name: comment
    using:
      foreign_key_constraint_on: comment_id
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $user_id
      hasura_fields:
      - user_id
      remote_schema: auth
    name: reacting_user
  insert_permissions:
  - role: user
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
      - comment_id
      - reaction
      - user_id
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - comment_id
      - created_at
      - id
      - reaction
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - comment_id
      - created_at
      - id
      - reaction
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - comment_id
      - created_at
      - id
      - reaction
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - comment_id
      - reaction
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: comments
  object_relationships:
  - name: post
    using:
      foreign_key_constraint_on: post_id
  array_relationships:
  - name: comment_reactions
    using:
      foreign_key_constraint_on:
        column: comment_id
        table:
          schema: public
          name: comment_reactions
  - name: replies
    using:
      foreign_key_constraint_on:
        column: comment_id
        table:
          schema: public
          name: replies
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $author_id
      hasura_fields:
      - author_id
      remote_schema: auth
    name: author
  insert_permissions:
  - role: user
    permission:
      check:
        author_id:
          _eq: X-Hasura-User-Id
      columns:
      - author_id
      - content
      - post_id
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - post_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - post_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - post_id
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - content
      filter:
        author_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        author_id:
          _eq: X-Hasura-User-Id
  event_triggers:
  - name: comment_create
    definition:
      enable_manual: false
      insert:
        columns: '*'
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: HASURA_COMMENT_CREATE_EVENT_HOOK
    headers:
    - name: HASURA_EVENT_SECRET
      value_from_env: HASURA_EVENT_SECRET
- table:
    schema: public
    name: onchain_links
  object_relationships:
  - name: post
    using:
      foreign_key_constraint_on: post_id
  array_relationships:
  - name: onchain_post_discussion_links
    using:
      foreign_key_constraint_on:
        column: onchain_link_id
        table:
          schema: public
          name: onchain_post_discussion_link
  remote_relationships:
  - definition:
      remote_field:
        motions:
          arguments:
            where:
              motionProposalId: $onchain_motion_id
      hasura_fields:
      - onchain_motion_id
      remote_schema: chain-db
    name: onchain_motion
  - definition:
      remote_field:
        proposals:
          arguments:
            where:
              proposalId: $onchain_proposal_id
      hasura_fields:
      - onchain_proposal_id
      remote_schema: chain-db
    name: onchain_proposal
  - definition:
      remote_field:
        referendums:
          arguments:
            where:
              referendumId: $onchain_referendum_id
      hasura_fields:
      - onchain_referendum_id
      remote_schema: chain-db
    name: onchain_referendum
  - definition:
      remote_field:
        treasurySpendProposals:
          arguments:
            where:
              treasuryProposalId: $onchain_treasury_proposal_id
      hasura_fields:
      - onchain_treasury_proposal_id
      remote_schema: chain-db
    name: onchain_treasury_spend_proposal
  - definition:
      remote_field:
        tips:
          arguments:
            where:
              hash: $onchain_tip_id
      hasura_fields:
      - onchain_tip_id
      remote_schema: chain-db
    name: onchain_tip
  - definition:
      remote_field:
        bounties:
          arguments:
            where:
              bountyId: $onchain_bounty_id
      hasura_fields:
      - onchain_bounty_id
      remote_schema: chain-db
    name: onchain_bounty
  - definition:
      remote_field:
        techCommitteeProposals:
          arguments:
            where:
              proposalId: $onchain_tech_committee_proposal_id
      hasura_fields:
      - onchain_tech_committee_proposal_id
      remote_schema: chain-db
    name: onchain_tech_committee_proposal
  - definition:
      remote_field:
        childBounties:
          arguments:
            where:
              childBountyId: $onchain_child_bounty_id
      hasura_fields:
      - onchain_child_bounty_id
      remote_schema: chain-db
    name: onchain_child_bounty
  - definition:
      remote_field:
        referendumV2s:
          arguments:
            where:
              referendumId: $onchain_referendumv2_id
      hasura_fields:
      - onchain_referendumv2_id
      remote_schema: chain-db
    name: onchain_referendumv2
  insert_permissions:
  - role: proposal_bot
    permission:
      check: {}
      columns:
      - onchain_bounty_id
      - onchain_child_bounty_id
      - onchain_motion_id
      - onchain_proposal_id
      - onchain_referendum_id
      - onchain_referendumv2_id
      - onchain_referendumv2_status
      - onchain_tech_committee_proposal_id
      - onchain_tip_id
      - onchain_treasury_proposal_id
      - origin
      - post_id
      - proposer_address
      - track
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - created_at
      - id
      - onchain_bounty_id
      - onchain_child_bounty_id
      - onchain_motion_id
      - onchain_proposal_id
      - onchain_referendum_id
      - onchain_referendumv2_id
      - onchain_referendumv2_status
      - onchain_tech_committee_proposal_id
      - onchain_tip_id
      - onchain_treasury_proposal_id
      - origin
      - post_id
      - proposer_address
      - track
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - created_at
      - id
      - onchain_bounty_id
      - onchain_child_bounty_id
      - onchain_motion_id
      - onchain_proposal_id
      - onchain_referendum_id
      - onchain_referendumv2_id
      - onchain_referendumv2_status
      - onchain_tech_committee_proposal_id
      - onchain_tip_id
      - onchain_treasury_proposal_id
      - origin
      - post_id
      - proposer_address
      - track
      filter: {}
      allow_aggregations: true
  - role: proposal_bot
    permission:
      columns:
      - created_at
      - id
      - onchain_bounty_id
      - onchain_child_bounty_id
      - onchain_motion_id
      - onchain_proposal_id
      - onchain_referendum_id
      - onchain_referendumv2_id
      - onchain_referendumv2_status
      - onchain_tech_committee_proposal_id
      - onchain_tip_id
      - onchain_treasury_proposal_id
      - origin
      - post_id
      - proposer_address
      - track
      filter: {}
  - role: user
    permission:
      columns:
      - created_at
      - id
      - onchain_bounty_id
      - onchain_child_bounty_id
      - onchain_motion_id
      - onchain_proposal_id
      - onchain_referendum_id
      - onchain_referendumv2_id
      - onchain_referendumv2_status
      - onchain_tech_committee_proposal_id
      - onchain_tip_id
      - onchain_treasury_proposal_id
      - origin
      - post_id
      - proposer_address
      - track
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: proposal_bot
    permission:
      columns:
      - onchain_bounty_id
      - onchain_child_bounty_id
      - onchain_motion_id
      - onchain_proposal_id
      - onchain_referendum_id
      - onchain_referendumv2_id
      - onchain_referendumv2_status
      - onchain_tech_committee_proposal_id
      - onchain_tip_id
      - onchain_treasury_proposal_id
      - post_id
      - proposer_address
      filter: {}
      check: null
  event_triggers:
  - name: onchain_link_create
    definition:
      enable_manual: false
      insert:
        columns: '*'
      update:
        columns:
        - id
        - onchain_motion_id
        - onchain_proposal_id
        - onchain_referendum_id
        - onchain_treasury_proposal_id
        - post_id
        - proposer_address
        - created_at
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: HASURA_ONCHAIN_LINK_CREATE_HOOK
    headers:
    - name: HASURA_EVENT_SECRET
      value_from_env: HASURA_EVENT_SECRET
- table:
    schema: public
    name: onchain_post_discussion_link
  object_relationships:
  - name: onchain_link
    using:
      foreign_key_constraint_on: onchain_link_id
  - name: post
    using:
      foreign_key_constraint_on: discussion_post_id
  insert_permissions:
  - role: user
    permission:
      check:
        _and:
        - author_id:
            _eq: X-Hasura-User-Id
      columns:
      - id
      - onchain_link_id
      - discussion_post_id
      - author_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - onchain_link_id
      - discussion_post_id
      - author_id
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - author_id
      - discussion_post_id
      - onchain_link_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - author_id
      - discussion_post_id
      - id
      - onchain_link_id
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - discussion_post_id
      - onchain_link_id
      filter:
        _and:
        - author_id:
            _eq: X-Hasura-User-Id
      check:
        _and:
        - author_id:
            _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        _and:
        - author_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: option_poll
  object_relationships:
  - name: option_poll_post
    using:
      foreign_key_constraint_on: post_id
  array_relationships:
  - name: option_poll_votes
    using:
      foreign_key_constraint_on:
        column: option_poll_id
        table:
          schema: public
          name: option_poll_votes
  insert_permissions:
  - role: user
    permission:
      check:
        option_poll_post:
          author_id:
            _eq: X-Hasura-User-Id
      columns:
      - end_at
      - options
      - post_id
      - question
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - created_at
      - end_at
      - id
      - options
      - post_id
      - question
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - created_at
      - end_at
      - id
      - options
      - post_id
      - question
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - created_at
      - end_at
      - id
      - options
      - post_id
      - question
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - end_at
      - options
      - post_id
      - question
      filter:
        option_poll_post:
          author_id:
            _eq: X-Hasura-User-Id
      check:
        option_poll_post:
          author_id:
            _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        option_poll_post:
          author_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: option_poll_votes
  object_relationships:
  - name: option_poll
    using:
      foreign_key_constraint_on: option_poll_id
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $user_id
      hasura_fields:
      - user_id
      remote_schema: auth
    name: option_poll_voter
  insert_permissions:
  - role: user
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
      - option
      - option_poll_id
      - user_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - option_poll_id
      - user_id
      - option
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - created_at
      - id
      - option
      - option_poll_id
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - id
      - option_poll_id
      - user_id
      - option
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - option
      - option_poll_id
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: polkassembly_proposals
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments: {}
      hasura_fields: []
      remote_schema: auth
    name: author
  insert_permissions:
  - role: user
    permission:
      check:
        author_id:
          _eq: X-Hasura-User-Id
      columns:
      - author_id
      - content
      - created_at
      - id
      - is_synced
      - proposal_hash
      - proposal_id
      - proposal_type
      - proposer_address
      - title
      - updated_at
      backend_only: false
  select_permissions:
  - role: event_bot
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - is_synced
      - proposal_hash
      - proposal_id
      - proposal_type
      - proposer_address
      - title
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: proposal_bot
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - is_synced
      - proposal_hash
      - proposal_id
      - proposal_type
      - proposer_address
      - title
      - updated_at
      filter: {}
  - role: user
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - is_synced
      - proposal_hash
      - proposal_id
      - proposal_type
      - proposer_address
      - title
      - updated_at
      filter: {}
  delete_permissions:
  - role: proposal_bot
    permission:
      filter: {}
- table:
    schema: public
    name: poll
  object_relationships:
  - name: post
    using:
      foreign_key_constraint_on: post_id
  array_relationships:
  - name: poll_votes
    using:
      foreign_key_constraint_on:
        column: poll_id
        table:
          schema: public
          name: poll_votes
  insert_permissions:
  - role: user
    permission:
      check:
        post:
          author_id:
            _eq: X-Hasura-User-Id
      columns:
      - block_end
      - post_id
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - block_end
      - created_at
      - post_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - block_end
      - created_at
      - id
      - post_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - block_end
      - id
      - post_id
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - block_end
      filter:
        post:
          author_id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: poll_votes
  object_relationships:
  - name: poll
    using:
      foreign_key_constraint_on: poll_id
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $user_id
      hasura_fields:
      - user_id
      remote_schema: auth
    name: voter
  insert_permissions:
  - role: user
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
      - poll_id
      - user_id
      - vote
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - poll_id
      - user_id
      - vote
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - created_at
      - id
      - poll_id
      - updated_at
      - user_id
      - vote
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - vote
      - id
      - poll_id
      - user_id
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - poll_id
      - user_id
      - vote
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: post_last_update
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - comment_id
      - post_id
      - last_update
      filter: {}
  - role: event_bot
    permission:
      columns:
      - comment_id
      - post_id
      - last_update
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - post_id
      - last_update
      - comment_id
      filter: {}
- table:
    schema: public
    name: post_reactions
  object_relationships:
  - name: post
    using:
      foreign_key_constraint_on: post_id
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $user_id
      hasura_fields:
      - user_id
      remote_schema: auth
    name: reacting_user
  insert_permissions:
  - role: user
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
      - post_id
      - reaction
      - user_id
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - created_at
      - id
      - post_id
      - reaction
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - created_at
      - id
      - post_id
      - reaction
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - created_at
      - id
      - post_id
      - reaction
      - updated_at
      - user_id
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - post_id
      - reaction
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: post_topics
  array_relationships:
  - name: posts
    using:
      foreign_key_constraint_on:
        column: topic_id
        table:
          schema: public
          name: posts
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - name
      filter: {}
  - role: event_bot
    permission:
      columns:
      - id
      - name
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - id
      - name
      filter: {}
- table:
    schema: public
    name: post_types
  array_relationships:
  - name: posts
    using:
      foreign_key_constraint_on:
        column: type_id
        table:
          schema: public
          name: posts
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - name
      filter: {}
  - role: event_bot
    permission:
      columns:
      - id
      - name
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - id
      - name
      filter: {}
- table:
    schema: public
    name: posts
  object_relationships:
  - name: last_update
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: post_last_update
        column_mapping:
          id: post_id
  - name: onchain_link
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: onchain_links
        column_mapping:
          id: post_id
  - name: topic
    using:
      foreign_key_constraint_on: topic_id
  - name: type
    using:
      foreign_key_constraint_on: type_id
  array_relationships:
  - name: comments
    using:
      foreign_key_constraint_on:
        column: post_id
        table:
          schema: public
          name: comments
  - name: onchain_post_discussion_links
    using:
      foreign_key_constraint_on:
        column: discussion_post_id
        table:
          schema: public
          name: onchain_post_discussion_link
  - name: option_polls
    using:
      foreign_key_constraint_on:
        column: post_id
        table:
          schema: public
          name: option_poll
  - name: polls
    using:
      foreign_key_constraint_on:
        column: post_id
        table:
          schema: public
          name: poll
  - name: post_reactions
    using:
      foreign_key_constraint_on:
        column: post_id
        table:
          schema: public
          name: post_reactions
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $author_id
      hasura_fields:
      - author_id
      remote_schema: auth
    name: author
  insert_permissions:
  - role: proposal_bot
    permission:
      check:
        author_id:
          _eq: X-Hasura-User-Id
      columns:
      - author_id
      - content
      - title
      - topic_id
      - type_id
  - role: user
    permission:
      check:
        _and:
        - author_id:
            _eq: X-Hasura-User-Id
        - type_id:
            _eq: 1
      columns:
      - author_id
      - content
      - title
      - topic_id
      - type_id
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - title
      - topic_id
      - type_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - title
      - topic_id
      - type_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: proposal_bot
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - title
      - topic_id
      - type_id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - author_id
      - content
      - created_at
      - id
      - title
      - topic_id
      - type_id
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - content
      - title
      - topic_id
      filter:
        _or:
        - author_id:
            _eq: X-Hasura-User-Id
        - onchain_link:
            proposer_address:
              _in: X-Hasura-Kumandra
        - onchain_link:
            proposer_address:
              _in: X-Hasura-Selendra
      check: null
- table:
    schema: public
    name: proposal_tracker
  insert_permissions:
  - role: user
    permission:
      check:
        _and:
        - user_id:
            _eq: X-Hasura-User-Id
      columns:
      - deadline
      - network
      - onchain_proposal_id
      - status
      - user_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - onchain_proposal_id
      - status
      - deadline
      - user_id
      - created_at
      - updated_at
      - network
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - id
      - onchain_proposal_id
      - status
      - network
      - deadline
      - user_id
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - created_at
      - deadline
      - id
      - network
      - onchain_proposal_id
      - status
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - status
      filter:
        _and:
        - user_id:
            _eq: X-Hasura-User-Id
      check:
        _and:
        - user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: replies
  object_relationships:
  - name: comment
    using:
      foreign_key_constraint_on: comment_id
  remote_relationships:
  - definition:
      remote_field:
        user:
          arguments:
            id: $author_id
      hasura_fields:
      - author_id
      remote_schema: auth
    name: author
  insert_permissions:
  - role: user
    permission:
      check:
        author_id:
          _eq: X-Hasura-User-Id
      columns:
      - author_id
      - comment_id
      - content
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - content
      - comment_id
      - author_id
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - author_id
      - comment_id
      - content
      - created_at
      - id
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - author_id
      - content
      - created_at
      - updated_at
      - comment_id
      - id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - content
      filter:
        author_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        author_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: track_info
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - track_id
      - name
      - max_deciding
      - decision_deposit
      - prepare_period
      - decision_period
      - confirm_period
      - min_enactment_period
      filter: {}
      allow_aggregations: true
  - role: event_bot
    permission:
      columns:
      - confirm_period
      - decision_period
      - id
      - max_deciding
      - min_enactment_period
      - prepare_period
      - track_id
      - decision_deposit
      - name
      filter: {}
      allow_aggregations: true
  - role: proposal_bot
    permission:
      columns:
      - confirm_period
      - decision_period
      - id
      - max_deciding
      - min_enactment_period
      - prepare_period
      - track_id
      - decision_deposit
      - name
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - confirm_period
      - decision_period
      - id
      - max_deciding
      - min_enactment_period
      - prepare_period
      - track_id
      - decision_deposit
      - name
      filter: {}
      allow_aggregations: true
